{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/CapitalizePipe.pipe.ts","webpack:///./src/app/action-book/action-book.component.css","webpack:///./src/app/action-book/action-book.component.html","webpack:///./src/app/action-book/action-book.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/book.ts","webpack:///./src/app/books.service.ts","webpack:///./src/app/books/books.component.css","webpack:///./src/app/books/books.component.html","webpack:///./src/app/books/books.component.ts","webpack:///./src/app/confirmation-dialog/confirmation-dialog.component.css","webpack:///./src/app/confirmation-dialog/confirmation-dialog.component.html","webpack:///./src/app/confirmation-dialog/confirmation-dialog.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'capitalize' })\r\nexport class CapitalizePipe implements PipeTransform {\r\n    transform(value: string, args: string[]): any {\r\n        if (!value) return value;\r\n\r\n        return value.replace(/\\w\\S*/g, function (txt) {\r\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n        });\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<mat-card-header>\\n  <mat-toolbar class=\\\"toolbar\\\">\\n    <mat-card-title>Add a Book</mat-card-title>\\n    <span class=\\\"toolbar-spacer\\\"></span>\\n  </mat-toolbar>\\n</mat-card-header>\\n<mat-card-content>\\n  <div class=\\\"container\\\">\\n    <form [formGroup]=\\\"addBookForm\\\">\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <label>Title</label>\\n            <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\">\\n            <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"title.invalid && title.errors.alreadyTaken\\\">\\n              Title already exsits\\n            </div>\\n            <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"title.invalid && title.errors.required && title.touched\\\">\\n              Required\\n            </div>\\n            <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"title.invalid && title.errors.pattern && title.touched\\\">\\n              Cannot use non-English characters\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <label>Author</label>\\n            <input type=\\\"text\\\" formControlName=\\\"author\\\" class=\\\"form-control\\\">\\n            <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"author.invalid && author.errors.required && author.touched\\\">\\n              Required\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <label>Date</label>\\n            <input type=\\\"date\\\" formControlName=\\\"date\\\" class=\\\"form-control\\\">\\n            <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"date.invalid && date.errors.required && date.touched\\\">\\n              Required\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-2 mt-2\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"addBookForm.invalid\\\" (click)=\\\"onSubmit()\\\">\\n              <mat-icon>save</mat-icon>\\n            </button>\\n          </div>\\n          <div class=\\\"col-md-2 mt-2\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onNoClick()\\\">\\n              <mat-icon>X</mat-icon>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</mat-card-content>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { BooksService } from '../books.service';\nimport { ActionBookDataInterface, ActionBookDataMode } from '../book';\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\n\n@Component({\n  selector: 'app-action-book',\n  templateUrl: './action-book.component.html',\n  styleUrls: ['./action-book.component.css']\n\n})\nexport class ActionBookComponent implements OnInit {\n\n  public addBookForm: FormGroup;\n  private readonly images: Array<string> = [\n    '../assets/images/male-code.jpg',\n    '../assets/images/girl-code.jpg',\n    '../assets/images/code.jpg',\n    '../assets/images/code-love.jpg',\n    '../assets/images/geek.jpg',\n    '../assets/images/banana.jpg'\n  ];\n\n  constructor(private formBuilder: FormBuilder,\n    private bs: BooksService,\n    private dialogRef: MatDialogRef<ActionBookComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ActionBookDataInterface) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit() {\n    const titleValidation = (control: AbstractControl): any => {\n      if (control && control.value) {\n        const valueLower = control.value.toLowerCase();\n        const exsit = this.bs.booksList.some(el => el.title.toLowerCase() == valueLower);\n        if (exsit) {\n          const temp = this.data.book.title;\n          return (temp && temp.toLowerCase() === valueLower)\n            ? null : { alreadyTaken: true };\n        } else return null;\n      } else return null;\n    }\n\n    this.addBookForm = this.formBuilder.group({\n      id: [this.data.book.id],\n      title: [this.data.book.title, [Validators.required, Validators.pattern(/^[a-zA-Z\\s]*$/), titleValidation]],\n      author: [this.data.book.author, Validators.required],\n      date: [this.data.book.date, Validators.required],\n      image: [this.data.book.image],\n    });\n  }\n\n\n  onSubmit() {\n    if (this.addBookForm.valid) {\n      if (this.data.mode == ActionBookDataMode.Add) {\n        const random = Math.floor(Math.random() * 6);\n        this.addBookForm.value.image = this.images[random]\n        this.bs.addBook(this.addBookForm.value);\n      } else if (this.data.mode == ActionBookDataMode.Edit) {\n        this.bs.editBook(this.addBookForm.value);\n      }\n      this.dialogRef.close();\n    }\n  }\n\n  get title() {\n    return this.addBookForm.get('title');\n  }\n\n  get author() {\n    return this.addBookForm.get('author');\n  }\n\n  get date() {\n    return this.addBookForm.get('date');\n  }\n}\n\n\n\n","module.exports = \"\"","module.exports = \"<app-header></app-header>\\n<app-books></app-books>\\n\\n<!-- \\npipe\\ndelete confirmation\\n -->\\n\"","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor() {}\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { BooksComponent } from './books/books.component';\nimport { BooksService } from './books.service';\nimport { ActionBookComponent } from './action-book/action-book.component';\nimport { CapitalizePipe } from './CapitalizePipe.pipe';\nimport { ConfirmationDialogComponent } from './confirmation-dialog/confirmation-dialog.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ActionBookComponent,\n    HeaderComponent,\n    BooksComponent,\n    CapitalizePipe,\n    ConfirmationDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    HttpClientModule,\n    MatDialogModule,\n    MatCardModule,\n    MatIconModule,\n    MatToolbarModule,\n    BrowserAnimationsModule\n  ],\n\n  providers: [BooksService, BrowserAnimationsModule, CapitalizePipe],\n  bootstrap: [AppComponent],\n  entryComponents: [ActionBookComponent, ConfirmationDialogComponent]\n\n})\nexport class AppModule { }\n","export interface Book {\r\n    id: number,\r\n    title: string,\r\n    author: string,\r\n    date: string,\r\n    image?: string\r\n}\r\n\r\nexport interface ActionBookDataInterface {\r\n    book: Book;\r\n    mode: string;\r\n}\r\n\r\nexport enum ActionBookDataMode {\r\n    Add = 'Add',\r\n    Edit = 'Edit'\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Book } from \"./book\";\r\nimport { Observable, config } from \"rxjs\";\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class BooksService {\r\n    private readonly books_data: string = \"../assets/data/books.json\";\r\n    public booksList: Array<Book> = [];\r\n    private idCounter: number = 7;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.getBooksFromApi()\r\n            .pipe(take(1))\r\n            .subscribe(data => this.booksList = data);\r\n    }\r\n\r\n    getBooksFromApi(): Observable<Book[]> {\r\n        return this.http.get<Book[]>(this.books_data);\r\n    }\r\n\r\n    addBook(book: Book) {\r\n        book.id = this.idCounter;\r\n        ++this.idCounter;\r\n        this.booksList.push(book);\r\n    }\r\n\r\n    editBook(book: Book) {\r\n        const index = this.booksList.findIndex(eb => eb.id === book.id);\r\n        if (index != -1)\r\n            this.booksList[index] = book;\r\n    }\r\n\r\n    deleteBook(id: number) {\r\n        this.booksList = this.booksList.filter(el => el.id !== id);\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<button class=\\\"btn btn-dark mt-2 ml-2\\\" (click)=\\\"addBookButton()\\\">\\r\\n  +\\r\\n</button>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div *ngFor=\\\"let book of bs.booksList\\\">\\r\\n      <div class=\\\"col-sm\\\">\\r\\n        <div class=\\\"card mt-4\\\" style=\\\"width: 18rem;\\\">\\r\\n          <img class=\\\"card-img-top\\\" [src]=\\\"book.image\\\" alt=\\\"Card image cap\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <h5 class=\\\"card-title\\\">{{ book.title | capitalize }}</h5>\\r\\n            <p class=\\\"card-text\\\">{{ book.author | capitalize }}</p>\\r\\n            <p class=\\\"card-text\\\">{{ book.date }}</p>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <button class=\\\"btn btn-outline-success btn-block\\\" (click)=\\\"editBook(book)\\\">Edit</button>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\">\\r\\n                <button class=\\\"btn btn-outline-danger btn-block\\\" (click)=\\\"deleteBook(book.id)\\\">Delete</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BooksService } from '../books.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActionBookComponent } from '../action-book/action-book.component';\nimport { take } from 'rxjs/operators';\nimport { Book, ActionBookDataInterface, ActionBookDataMode } from '../book';\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\n\n\n@Component({\n  selector: 'app-books',\n  templateUrl: './books.component.html',\n  styleUrls: ['./books.component.css']\n})\nexport class BooksComponent implements OnInit {\n\n  private isPopupOpen = false;\n\n  constructor(public bs: BooksService,\n    private dialog?: MatDialog) { }\n\n  ngOnInit() {\n  }\n\n  addBookButton() {\n    this.isPopupOpen = true;\n\n    const data: ActionBookDataInterface = {\n      book: {} as Book,\n      mode: ActionBookDataMode.Add\n    }\n\n    const dialogRef = this.dialog.open(ActionBookComponent, {\n      data: data\n    });\n\n    dialogRef.afterClosed()\n      .pipe(take(1))\n      .subscribe(() => this.isPopupOpen = false);\n  }\n\n  editBook(book: Book) {\n    this.isPopupOpen = true;\n    const data: ActionBookDataInterface = {\n      book: book,\n      mode: ActionBookDataMode.Edit\n    }\n    const dialogRef = this.dialog.open(ActionBookComponent, {\n      data: data\n    });\n\n    dialogRef.afterClosed()\n      .pipe(take(1))\n      .subscribe(() => this.isPopupOpen = false);\n  }\n\n  deleteBook(id: number) {\n    this.isPopupOpen = true;\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n      disableClose: false\n    });\n\n    dialogRef.afterClosed()\n      .pipe(take(1))\n      .subscribe((res) => {\n        if (res) {\n          this.bs.deleteBook(id);\n        } else {\n          this.isPopupOpen = false;\n        }\n      });\n  }\n}\n","module.exports = \"\"","module.exports = \"<h1 md-dialog-title>Are you sure ?</h1>\\n<div md-dialog-content>{{confirmMessage}}</div>\\n<div md-dialog-actions>\\n  <button md-button style=\\\"color: #fff;background-color: #153961;\\\" (click)=\\\"dialogRef.close(true)\\\">Confirm</button>\\n  <button md-button (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\n\n\n@Component({\n  selector: 'app-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.css']\n})\nexport class ConfirmationDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<ConfirmationDialogComponent>) { }\n\n  public confirmMessage: string;\n\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"h1 {\\r\\n  color: white;\\r\\n}\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark\\\">\\n  <h1 class=\\\"pt-2 pb-2\\\">Books-Library</h1>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}